<?xml version="1.0" standalone="no"?><?xml-stylesheet type="text/css" href="https://www.processon.com/themes/default/mind/icons/icons.css" ?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg xmlns="http://www.w3.org/2000/svg" xlink="http://www.w3.org/1999/xlink" id="mind-svg-view-con" version="1.1" width="2443.15625px" height="9006px"><defs></defs><g id="svgbackgroundid"><defs></defs><rect x="0" y="0" width="2443.15625" height="9006" fill="#ffffff"></rect></g><g transform="translate(-9866.5, -5497)" id="sdjakdjak10"><defs></defs><g class="svg-topic-con" transform="translate(0.5,0.5)"><path part="right" sub="true" id="line_ac1321bdd87a" d="M 10000.000091552734 9999.500091552734 C 10000.000091552734 9999.500091552734 10010.000091552734 6468.5001220703125 10183.500061035156 6468.5001220703125" stroke="rgb(51, 156, 168)" fill="none" stroke-width="5"></path><path part="right" sub="true" id="line_84d1cdcf6f18" d="M 10000.000091552734 9999.500091552734 C 10000.000091552734 9999.500091552734 10010.000091552734 9012.00015258789 10183.500061035156 9012.00015258789" stroke="rgb(232, 124, 37)" fill="none" stroke-width="5"></path><path part="right" sub="true" id="line_cdce42bd6a07" d="M 10000.000091552734 9999.500091552734 C 10000.000091552734 9999.500091552734 10010.000091552734 10836.000091552734 10183.500061035156 10836.000091552734" stroke="#e85d4e" fill="none" stroke-width="5"></path><path part="right" sub="true" id="line_aa32d8bc8e22" d="M 10000.000091552734 9999.500091552734 C 10000.000091552734 9999.500091552734 10010.000091552734 11199.000183105469 10183.500061035156 11199.000183105469" stroke="rgb(255,204,204)" fill="none" stroke-width="5"></path><path part="right" sub="true" id="line_7dbc95fa9f79" d="M 10000.000091552734 9999.500091552734 C 10000.000091552734 9999.500091552734 10010.000091552734 11587.50015258789 10183.500061035156 11587.50015258789" stroke="#e85d4e" fill="none" stroke-width="5"></path><path part="right" sub="true" id="line_9c9047803e79" d="M 10000.000091552734 9999.500091552734 C 10000.000091552734 9999.500091552734 10010.000091552734 12704.5 10183.500061035156 12704.5" stroke="#3aa9ce" fill="none" stroke-width="5"></path><path part="right" sub="true" id="line_4a00ef279536" d="M 10000.000091552734 9999.500091552734 C 10000.000091552734 9999.500091552734 10010.000091552734 13604.500244140625 10183.500061035156 13604.500244140625" stroke="#3aa9ce" fill="none" stroke-width="5"></path><path part="right" sub="true" id="line_64b6b8f7da64" d="M 10000.000091552734 9999.500091552734 C 10000.000091552734 9999.500091552734 10010.000091552734 13821 10183.500061035156 13821" stroke="#3aa9ce" fill="none" stroke-width="5"></path><path part="right" sub="true" id="line_e0e07edf31c1" d="M 10000.000091552734 9999.500091552734 C 10000.000091552734 9999.500091552734 10010.000091552734 14240.000122070312 10183.500061035156 14240.000122070312" stroke="#3aa9ce" fill="none" stroke-width="5"></path></g><g class="svg-connection-con" transform="translate(0.5,0.5)"></g><g class="svg-freesums-con" transform="translate(0.5,0.5)"></g></g><g id="e0e07edf31c1"><rect x="317" y="8510" rx="5px" ry="5px" width="926" height="466" style="fill: #ffffff; stroke:rgb(153,204,255);stroke-width:3px;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="17px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="330" y="8956.340625"><tspan>总结</tspan></tspan></text></g><image xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="https://cdn2.processon.com/6080ff71e4b0e306bc76bb89?e=1619070337&amp;token=trhI0BY8QfVrIGn9nENop6JAc6l5nZuxhjQ62UfM:1AtSUrESYux_j4YJhPFxQRD7V2s=" transform="translate(330, 8523)" width="900" height="407"></image></g><g id="64b6b8f7da64"><rect x="317" y="8298.546875" rx="5px" ry="5px" width="149" height="50" style="fill: #ffffff; stroke:#FDB813;stroke-width:3px;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="17px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="330" y="8329.66875"><tspan>shuffle详细机制</tspan></tspan></text></g></g><g id="fdb18ebe7203"><rect x="501.78125" y="8168" rx="1px" ry="1px" width="550" height="310" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="510.78125" y="8182.8"><tspan>1. Collect阶段 ：将 MapTask 的结果输出到默认大小为 100M 的环形缓冲区，保存的是</tspan></tspan><tspan x="510.78125" y="8200.8"><tspan>key/value，Partition 分区信息等。</tspan></tspan><tspan x="510.78125" y="8218.8"><tspan>2. Spill阶段 ：当内存中的数据量达到一定的阀值的时候，就会将数据写入本地磁盘，</tspan></tspan><tspan x="510.78125" y="8236.8"><tspan>在将数据写入磁盘之前需要对数据进行一次排序的操作，如果配置了 combiner，还会将</tspan></tspan><tspan x="510.78125" y="8254.8"><tspan>有相同分区号和 key 的数据进行排序。</tspan></tspan><tspan x="510.78125" y="8272.8"><tspan>3. Merge阶段 ：把所有溢出的临时文件进行一次合并操作，以确保一个 MapTask 最终只</tspan></tspan><tspan x="510.78125" y="8290.8"><tspan>产生一个中间数据文件。</tspan></tspan><tspan x="510.78125" y="8308.8"><tspan>4. Copy阶段 ：ReduceTask 启动 Fetcher 线程到已经完成 MapTask 的节点上复制一份属于</tspan></tspan><tspan x="510.78125" y="8326.8"><tspan>自己的数据，这些数据默认会保存在内存的缓冲区中，当内存的缓冲区达到一定的阀值</tspan></tspan><tspan x="510.78125" y="8344.8"><tspan>的时候，就会将数据写到磁盘之上。</tspan></tspan><tspan x="510.78125" y="8362.8"><tspan>5. Merge阶段 ：在 ReduceTask 远程复制数据的同时，会在后台开启两个线程对内存到本</tspan></tspan><tspan x="510.78125" y="8380.8"><tspan>地的数据文件进行合并操作。</tspan></tspan><tspan x="510.78125" y="8398.8"><tspan>6. Sort阶段 ：在对数据进行合并的同时，会进行排序操作，由于 MapTask 阶段已经对数</tspan></tspan><tspan x="510.78125" y="8416.8"><tspan>据进行了局部的排序，ReduceTask 只需保证 Copy 的数据的最终整体有效性即可。</tspan></tspan><tspan x="510.78125" y="8434.8"><tspan>Shuwle 中的缓冲区大小会影响到 mapreduce 程序的执行效率，原则上说，缓冲区越大，</tspan></tspan><tspan x="510.78125" y="8452.8"><tspan>磁盘io的次数越少，执行速度就越快</tspan></tspan><tspan x="510.78125" y="8470.8"><tspan>缓冲区的大小可以通过参数调整, 参数：mapreduce.task.io.sort.mb 默认100M</tspan></tspan></text></g></g><g id="4a00ef279536"><rect x="317" y="8082.046875" rx="5px" ry="5px" width="262" height="51" style="fill: #ffffff; stroke:rgb(255,204,204);stroke-width:3px;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="17px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="330" y="8113.16875"><tspan>和oracle分区的相似与不同之处</tspan></tspan></text></g></g><g id="f2b631c733fb"><rect x="615.390625" y="8077" rx="1px" ry="1px" width="137" height="24" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="624.390625" y="8093.3"><tspan>1. 结果是否缓存下来</tspan></tspan></text></g></g><g id="5d2b8ac69dd0"><rect x="615.390625" y="8112.5" rx="1px" ry="1px" width="228" height="24" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="624.390625" y="8128.8"><tspan>2. 寻址的需求，一次写入，多次读取</tspan></tspan></text></g></g><g id="9c9047803e79"><rect x="317" y="7182.03125" rx="5px" ry="5px" width="94" height="51" style="fill: #ffffff; stroke:rgb(51, 156, 168);stroke-width:3px;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="17px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="330" y="7213.153125"><tspan>综合案例</tspan></tspan></text></g></g><g id="ff77f8d17ff8"><rect x="447" y="6368" rx="1px" ry="1px" width="152" height="24" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="456" y="6384.3"><tspan>1. 词频统计wordcount</tspan></tspan></text></g></g><g id="cfd345711da5"><rect x="635.0625" y="6368" rx="1px" ry="1px" width="57" height="24" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="644.0625" y="6384.3"><tspan>子主题</tspan></tspan></text></g></g><g id="ef94a68d1489"><rect x="447" y="6403.5" rx="1px" ry="1px" width="150" height="24" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="456" y="6419.8"><tspan>2. 手机流量统计、求和</tspan></tspan></text></g></g><g id="68abd8b375cf"><rect x="447" y="6795.75" rx="1px" ry="1px" width="108" height="23" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="456" y="6812.05"><tspan>3. 实现join操作</tspan></tspan></text></g></g><g id="bf4718efc88f"><rect x="590.8125" y="6563.75" rx="1px" ry="1px" width="59" height="23" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="599.8125" y="6580.05"><tspan>map端</tspan></tspan></text></g></g><g id="b07600f7091a"><rect x="685.484375" y="6439" rx="1px" ry="1px" width="809" height="273" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"></text></g><image xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="https://cdn2.processon.com/607f9ab6e4b08d5f4337c9ed?e=1618979014&amp;token=trhI0BY8QfVrIGn9nENop6JAc6l5nZuxhjQ62UfM:62H1X6ISAoywUcGe8_A408hyFu8=" transform="translate(694.484375, 6441)" width="791" height="244"></image></g><g id="ea038d3172f2"><rect x="590.8125" y="6938.25" rx="1px" ry="1px" width="74" height="24" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="599.8125" y="6954.55"><tspan>reduce端</tspan></tspan></text></g></g><g id="c37847cd6c41"><rect x="700.375" y="6724" rx="1px" ry="1px" width="726" height="283" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"></text></g><image xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="https://cdn2.processon.com/607f9af1e4b0e306bc743729?e=1618979073&amp;token=trhI0BY8QfVrIGn9nENop6JAc6l5nZuxhjQ62UfM:WDJurWTv9NSV9qsCgEoZow3i7vA=" transform="translate(709.375, 6726)" width="708" height="254"></image></g><g id="335659797d3b"><rect x="700.375" y="7085.75" rx="1px" ry="1px" width="83" height="23" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="709.375" y="7102.05"><tspan>存在的问题</tspan></tspan></text></g></g><g id="6f1b224a2bc0"><rect x="819.375" y="7019" rx="1px" ry="1px" width="751" height="157" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"></text></g><image xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="https://cdn2.processon.com/607f9b0de4b0bc1d9eaff127?e=1618979101&amp;token=trhI0BY8QfVrIGn9nENop6JAc6l5nZuxhjQ62UfM:_h4eLv-b_ODprqNECEBU-DEJMlE=" transform="translate(828.375, 7021)" width="733" height="128"></image></g><g id="e6b40247d0c6"><rect x="447" y="7275.859375" rx="1px" ry="1px" width="98" height="23" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="456" y="7292.159375"><tspan>4. 求共同好友</tspan></tspan></text></g></g><g id="2fc1b66ce068"><rect x="580.609375" y="7188" rx="1px" ry="1px" width="918" height="199" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"></text></g><image xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="https://cdn2.processon.com/607f9a8ce4b0dcf1d14d9c79?e=1618978972&amp;token=trhI0BY8QfVrIGn9nENop6JAc6l5nZuxhjQ62UfM:m4BFbW_UiPXVmWkFpmARTee2TpQ=" transform="translate(589.609375, 7190)" width="900" height="170"></image></g><g id="5927e337a61a"><rect x="447" y="7478.21875" rx="1px" ry="1px" width="98" height="24" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="456" y="7494.51875"><tspan>5. 小文件合并</tspan></tspan></text></g></g><g id="c3e5b34686dd"><rect x="580.609375" y="7399.21875" rx="1px" ry="1px" width="680" height="182" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="589.609375" y="7573.51875"><tspan>自定义inputformat</tspan></tspan></text></g><image xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="https://cdn2.processon.com/607f9b3ee4b0e306bc7437c7?e=1618979150&amp;token=trhI0BY8QfVrIGn9nENop6JAc6l5nZuxhjQ62UfM:8CIbOWRfdUfek1T2TsKIUxsNMkY=" transform="translate(589.609375, 7401.21875)" width="662" height="150"></image></g><g id="8d2e5f6cd3b5"><rect x="447" y="7717.765625" rx="1px" ry="1px" width="76" height="24" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="456" y="7734.065625"><tspan>6.求TopN</tspan></tspan></text></g></g><g id="baa293b08bc4"><rect x="559.34375" y="7717.765625" rx="1px" ry="1px" width="83" height="24" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="568.34375" y="7734.065625"><tspan>自定义分组</tspan></tspan></text></g></g><g id="4e403a6ad967"><rect x="678.34375" y="7592.71875" rx="1px" ry="1px" width="918" height="274" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="687.34375" y="7859.128125"><tspan>自定义分组</tspan></tspan></text></g><image xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="https://cdn2.processon.com/607f9b88e4b08d5f4337cbbc?e=1618979224&amp;token=trhI0BY8QfVrIGn9nENop6JAc6l5nZuxhjQ62UfM:vtuCdaqjvTzl6Dl-bYVFTuC60_I=" transform="translate(687.34375, 7594.71875)" width="900" height="242"></image></g><g id="d64ee004546b"><rect x="447" y="7949.90625" rx="1px" ry="1px" width="164" height="23" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="456" y="7966.20625"><tspan>7. 自动逸outpuutformat</tspan></tspan></text></g></g><g id="3e764920f33e"><rect x="646.84375" y="7878.328125" rx="1px" ry="1px" width="918" height="167" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"></text></g><image xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="https://cdn2.processon.com/607f9b6de4b0fec2611bd8f9?e=1618979197&amp;token=trhI0BY8QfVrIGn9nENop6JAc6l5nZuxhjQ62UfM:pS5lRZJSuNOOI6oD_hSlLjw68y8=" transform="translate(655.84375, 7880.328125)" width="900" height="138"></image></g><g id="7dbc95fa9f79"><rect x="317" y="6064.796875" rx="5px" ry="5px" width="77" height="51" style="fill: #ffffff; stroke:#e85d4e;stroke-width:3px;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="17px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="330" y="6095.91875"><tspan>计数器</tspan></tspan></text></g></g><g id="5c9ccac3fe56"><rect x="430" y="5843" rx="1px" ry="1px" width="122" height="24" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="439" y="5859.3"><tspan>辅助诊断系统故障</tspan></tspan></text></g></g><g id="136a51faedbe"><rect x="430" y="5977.5" rx="1px" ry="1px" width="300" height="24" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="439" y="5993.8"><tspan>1. 通过context上下文对象可以获取我们的计数器</tspan></tspan></text></g></g><g id="eb7f040449a8"><rect x="766.046875" y="5878.5" rx="1px" ry="1px" width="454" height="222" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="775.046875" y="6092.8"><tspan>样例代码</tspan></tspan></text></g><image xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="https://cdn2.processon.com/607f9d5ae4b0bc1d9eaffb87?e=1618979690&amp;token=trhI0BY8QfVrIGn9nENop6JAc6l5nZuxhjQ62UfM:mjLgII-UhbLmek_wZ-mWk1lGA3I=" transform="translate(775.046875, 5880.5)" width="436" height="190"></image></g><g id="986a245c1cf5"><rect x="430" y="6212" rx="1px" ry="1px" width="224" height="24" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="439" y="6228.3"><tspan>2. 通过enum枚举类型来定义计数器</tspan></tspan></text></g></g><g id="53b4e6e3ecaf"><rect x="690.1875" y="6112" rx="1px" ry="1px" width="464" height="224" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="699.1875" y="6328.3"><tspan>样例代码</tspan></tspan></text></g><image xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="https://cdn2.processon.com/607f9d7be4b0bc1d9eaffbbf?e=1618979723&amp;token=trhI0BY8QfVrIGn9nENop6JAc6l5nZuxhjQ62UfM:ln8SWIKieWN0undpz4Ligfpf3DQ=" transform="translate(699.1875, 6114)" width="446" height="192"></image></g><g id="aa32d8bc8e22"><rect x="317" y="5676.546875" rx="5px" ry="5px" width="154" height="50" style="fill: #ffffff; stroke:rgb(255,204,204);stroke-width:3px;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="17px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="330" y="5707.66875"><tspan>Reduce详细机制</tspan></tspan></text></g></g><g id="9d325fd4992b"><rect x="507.265625" y="5645" rx="1px" ry="1px" width="918" height="112" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="516.265625" y="5659.8"><tspan>Reduce 大致分为 copy、sort、reduce 三个阶段，重点在前两个阶段。copy 阶段包含一个</tspan></tspan><tspan x="516.265625" y="5677.8"><tspan>eventFetcher 来获取已完成的 map 列表，由 Fetcher 线程去 copy 数据，在此过程中会启动两</tspan></tspan><tspan x="516.265625" y="5695.8"><tspan>个 merge 线程，分别为 inMemoryMerger 和 onDiskMerger，分别将内存中的数据 merge 到磁</tspan></tspan><tspan x="516.265625" y="5713.8"><tspan>盘和将磁盘中的数据进行 merge。待数据 copy 完成之后，copy 阶段就完成了，开始进行 sort阶段，sort 阶段主要是执行 finalMerge 操作，纯粹的 sort </tspan></tspan><tspan x="516.265625" y="5731.8"><tspan>阶段，完成之后就是 reduce 阶段，</tspan></tspan><tspan x="516.265625" y="5749.8"><tspan>调用用户定义的 reduce 函数进行处理</tspan></tspan></text></g></g><g id="2535c94f890c"><rect x="1461.265625" y="5591" rx="1px" ry="1px" width="544" height="220" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="1470.265625" y="5605.8"><tspan>1. Copy阶段 ，简单地拉取数据。Reduce进程启动一些数据copy线程(Fetcher)，通过HTTP</tspan></tspan><tspan x="1470.265625" y="5623.8"><tspan>方式请求maptask获取属于自己的文件。</tspan></tspan><tspan x="1470.265625" y="5641.8"><tspan>2. Merge阶段 。这里的merge如map端的merge动作，只是数组中存放的是不同map端</tspan></tspan><tspan x="1470.265625" y="5659.8"><tspan>copy来的数值。Copy过来的数据会先放入内存缓冲区中，这里的缓冲区大小要比map端</tspan></tspan><tspan x="1470.265625" y="5677.8"><tspan>的更为灵活。merge有三种形式：内存到内存；内存到磁盘；磁盘到磁盘。默认情况下第</tspan></tspan><tspan x="1470.265625" y="5695.8"><tspan>一种形式不启用。当内存中的数据量到达一定阈值，就启动内存到磁盘的merge。与map </tspan></tspan><tspan x="1470.265625" y="5713.8"><tspan>端类似，这也是溢写的过程，这个过程中如果你设置有Combiner，也是会启用的，然后</tspan></tspan><tspan x="1470.265625" y="5731.8"><tspan>在磁盘中生成了众多的溢写文件。第二种merge方式一直在运行，直到没有map端的数据</tspan></tspan><tspan x="1470.265625" y="5749.8"><tspan>时才结束，然后启动第三种磁盘到磁盘的merge方式生成最终的文件。</tspan></tspan><tspan x="1470.265625" y="5767.8"><tspan>3. 合并排序 。把分散的数据合并成一个大的数据后，还会再对合并后的数据排序。</tspan></tspan><tspan x="1470.265625" y="5785.8"><tspan>4. 对排序后的键值对调用reduce方法 ，键相等的键值对调用一次reduce方法，每次调用会</tspan></tspan><tspan x="1470.265625" y="5803.8"><tspan>产生零个或者多个键值对，最后把这些输出的键值对写入到HDFS文件中。</tspan></tspan></text></g></g><g id="cdce42bd6a07"><rect x="317" y="5313.546875" rx="5px" ry="5px" width="131" height="50" style="fill: #ffffff; stroke:#e85d4e;stroke-width:3px;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="17px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="330" y="5344.66875"><tspan>Map详细机制</tspan></tspan></text></g></g><g id="4b8f374d4da6"><rect x="483.875" y="5282" rx="1px" ry="1px" width="567" height="112" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="492.875" y="5296.8"><tspan>inputFile通过split被逻辑切分为多个split文件，通过Record按行读取内容给</tspan></tspan><tspan x="492.875" y="5314.8"><tspan>map（用户自己实现的）进行处理，数据被map处理结束之后交给OutputCollector收集器，对</tspan></tspan><tspan x="492.875" y="5332.8"><tspan>其结果key进行分区（默认使用hash分区），然后写入buwer，每个map task都有一个内存缓冲</tspan></tspan><tspan x="492.875" y="5350.8"><tspan>区，存储着map的输出结果，当缓冲区快满的时候需要将缓冲区的数据以一个临时文件的方</tspan></tspan><tspan x="492.875" y="5368.8"><tspan>式存放到磁盘，当整个map task结束后再对磁盘中这个map task产生的所有临时文件做合并，</tspan></tspan><tspan x="492.875" y="5386.8"><tspan>生成最终的正式输出文件，然后等待reduce task来拉数据</tspan></tspan></text></g></g><g id="a76bfed912f4"><rect x="1086.984375" y="5117" rx="1px" ry="1px" width="533" height="40" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="1095.984375" y="5131.8"><tspan>1. 读取数据组件 InputFormat (默认 TextInputFormat) 会通过 getSplits 方法对输入目录</tspan></tspan><tspan x="1095.984375" y="5149.8"><tspan>中文件进行逻辑切片规划得到 block , 有多少个 block 就对应启动多少个 MapTask .</tspan></tspan></text></g></g><g id="4806dde0dcb0"><rect x="1086.984375" y="5169" rx="1px" ry="1px" width="918" height="58" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="1095.984375" y="5183.8"><tspan>2. 将输入文件切分为 block 之后, 由 RecordReader 对象 (默认是LineRecordReader) 进 行读取, 以 \n 作为分隔符, 读取一行数据, 返回 &lt;key，value&gt; . Key</tspan></tspan><tspan x="1095.984375" y="5201.8"><tspan> 表示每行首字符偏</tspan></tspan><tspan x="1095.984375" y="5219.8"><tspan>移值, Value 表示这一行文本内容</tspan></tspan></text></g></g><g id="35d7e17e5ba1"><rect x="1086.984375" y="5239" rx="1px" ry="1px" width="508" height="40" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="1095.984375" y="5253.8"><tspan>3. 读取 block 返回 &lt;key,value&gt; , 进入用户自己继承的 Mapper 类中，执行用户重写</tspan></tspan><tspan x="1095.984375" y="5271.8"><tspan>的 map 函数, RecordReader 读取一行这里调用一次</tspan></tspan></text></g></g><g id="02bae1e47e89"><rect x="1086.984375" y="5291" rx="1px" ry="1px" width="524" height="40" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="1095.984375" y="5305.8"><tspan>4. Mapper 逻辑结束之后, 将 Mapper 的每条结果通过 context.write 进行collect数据收</tspan></tspan><tspan x="1095.984375" y="5323.8"><tspan>集. 在 collect 中, 会先对其进行分区处理，默认使用 HashPartitioner</tspan></tspan></text></g></g><g id="ee788c916059"><rect x="1086.984375" y="5343" rx="1px" ry="1px" width="537" height="58" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="1095.984375" y="5357.8"><tspan>5. 接下来, 会将数据写入内存, 内存中这片区域叫做环形缓冲区, 缓冲区的作用是批量收集</tspan></tspan><tspan x="1095.984375" y="5375.8"><tspan>Mapper 结果, 减少磁盘 IO 的影响. 我们的 Key/Value 对以及 Partition 的结果都会被写入</tspan></tspan><tspan x="1095.984375" y="5393.8"><tspan>缓冲区. 当然, 写入之前，Key 与 Value 值都会被序列化成字节数组</tspan></tspan></text></g></g><g id="4c62797c80fd"><rect x="1086.984375" y="5413" rx="1px" ry="1px" width="553" height="40" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="1095.984375" y="5427.8"><tspan>6. 当溢写线程启动后, 需要对这 80MB 空间内的 Key 做排序 (Sort). 排序是 MapReduce 模型</tspan></tspan><tspan x="1095.984375" y="5445.8"><tspan>默认的行为, 这里的排序也是对序列化的字节做的排序</tspan></tspan></text></g></g><g id="8a0dc73f7506"><rect x="1086.984375" y="5465" rx="1px" ry="1px" width="918" height="94" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="1095.984375" y="5479.8"><tspan>7. 合并溢写文件, 每次溢写会在磁盘上生成一个临时文件 (写之前判断是否有 Combiner), 如 果 Mapper 的输出结果真的很大, 有多次这样的溢写发生, 磁盘上</tspan></tspan><tspan x="1095.984375" y="5497.8"><tspan>相应的就会有多个临时文</tspan></tspan><tspan x="1095.984375" y="5515.8"><tspan>件存在. 当整个数据处理结束之后开始对磁盘中的临时文件进行 Merge 合并, 因为最终的</tspan></tspan><tspan x="1095.984375" y="5533.8"><tspan>文件只有一个, 写入磁盘, 并且为这个文件提供了一个索引文件, 以记录每个reduce对应数</tspan></tspan><tspan x="1095.984375" y="5551.8"><tspan>据的偏移量</tspan></tspan></text></g></g><g id="84d1cdcf6f18"><rect x="317" y="3489.546875" rx="5px" ry="5px" width="113" height="50" style="fill: #ffffff; stroke:rgb(232, 124, 37);stroke-width:3px;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="17px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="330" y="3520.66875"><tspan>2. 流程详解</tspan></tspan></text></g></g><g id="5b1fe40e36b3"><rect x="466.09375" y="1943" rx="1px" ry="1px" width="311" height="24" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="475.09375" y="1959.3"><tspan>添加打包方式，如&lt;packaging&gt;jar&lt;/packaging&gt;</tspan></tspan></text></g></g><g id="faa1c06621d4"><rect x="466.09375" y="2099.25" rx="1px" ry="1px" width="46" height="23" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="475.09375" y="2115.55"><tspan>map</tspan></tspan></text></g></g><g id="805a0f1a1b64"><rect x="547.765625" y="1978.5" rx="1px" ry="1px" width="349" height="24" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="556.765625" y="1994.8"><tspan>继承InputFormat, 用对应的接口，或者改写为自己的方法</tspan></tspan></text></g></g><g id="cf401253873e"><rect x="547.765625" y="2117" rx="1px" ry="1px" width="186" height="24" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="556.765625" y="2133.3"><tspan>继承Mapper，重写map方法</tspan></tspan></text></g></g><g id="d05f8b78e73c"><rect x="769.28125" y="2014" rx="1px" ry="1px" width="440" height="230" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="778.28125" y="2236.3"><tspan>样例</tspan></tspan></text></g><image xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="https://cdn2.processon.com/607f9beee4b0bc1d9eaff29b?e=1618979326&amp;token=trhI0BY8QfVrIGn9nENop6JAc6l5nZuxhjQ62UfM:mCY1315q-_qb-m3qiYmMKUzdWjc=" transform="translate(778.28125, 2016)" width="422" height="198"></image></g><g id="893a584065da"><rect x="466.09375" y="2922.75" rx="1px" ry="1px" width="60" height="24" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="475.09375" y="2939.05"><tspan>shuffle</tspan></tspan></text></g></g><g id="d83f29297077"><rect x="561.984375" y="2604.5" rx="1px" ry="1px" width="44" height="24" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="570.984375" y="2620.8"><tspan>分区</tspan></tspan></text></g></g><g id="beb34995dbf4"><rect x="641.984375" y="2255.5" rx="1px" ry="1px" width="568" height="24" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="650.984375" y="2271.8"><tspan>也即给数据打一个标记，通过指定分区，将同一个分区的数据发送到同一个reduce当中进行处理</tspan></tspan></text></g></g><g id="f99e50974002"><rect x="641.984375" y="2291" rx="1px" ry="1px" width="497" height="197" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"></text></g><image xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="https://cdn2.processon.com/607f9a4be4b0bc1d9eafec81?e=1618978907&amp;token=trhI0BY8QfVrIGn9nENop6JAc6l5nZuxhjQ62UfM:6gg_82s5K_Ga8IcUycRjeKxJh-E=" transform="translate(650.984375, 2293)" width="479" height="168"></image></g><g id="e2667f8ca467"><rect x="641.984375" y="2500" rx="1px" ry="1px" width="293" height="309" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="650.984375" y="2801.3"><tspan>代码样例</tspan></tspan></text></g><image xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="https://cdn2.processon.com/607f9cc1e4b0c5be8ad3f053?e=1618979537&amp;token=trhI0BY8QfVrIGn9nENop6JAc6l5nZuxhjQ62UfM:JpLaHhLwq9bgheg5LWN4FEq_pUc=" transform="translate(650.984375, 2502)" width="275" height="277"></image></g><g id="c71fdd46579a"><rect x="641.984375" y="2887" rx="1px" ry="1px" width="248" height="23" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="650.984375" y="2903.3"><tspan>在主类中设置分区类和ReduceTask个数</tspan></tspan></text></g></g><g id="d1717d06ebef"><rect x="925.8125" y="2820.5" rx="1px" ry="1px" width="592" height="157" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="934.8125" y="2969.8"><tspan>样例</tspan></tspan></text></g><image xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="https://cdn2.processon.com/607f9d0ae4b0dcf1d14da172?e=1618979610&amp;token=trhI0BY8QfVrIGn9nENop6JAc6l5nZuxhjQ62UfM:D6BJtGMxWYul94UzezPYBhaXJvs=" transform="translate(934.8125, 2822.5)" width="574" height="125"></image></g><g id="e52e93e11f82"><rect x="561.984375" y="3059" rx="1px" ry="1px" width="96" height="24" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="570.984375" y="3075.3"><tspan>排序和序列化</tspan></tspan></text></g></g><g id="d561617a6c7e"><rect x="693.984375" y="2989" rx="1px" ry="1px" width="539" height="76" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="702.984375" y="3003.8"><tspan>Java 的序列化 (Serializable) 是一个重量级序列化框架, 一个对象被序列化后, 会附带很多额</tspan></tspan><tspan x="702.984375" y="3021.8"><tspan>外的信息 (各种校验信息, header, 继承体系等）, 不便于在网络中高效传输. 所以, Hadoop </tspan></tspan><tspan x="702.984375" y="3039.8"><tspan>自己开发了一套序列化机制(Writable), 精简高效. 不用像 Java 对象类一样传输多层的父子</tspan></tspan><tspan x="702.984375" y="3057.8"><tspan>关系, 需要哪个属性就传输哪个属性值, 大大的减少网络传输的开销</tspan></tspan></text></g></g><g id="7e3a62303be1"><rect x="693.984375" y="3077" rx="1px" ry="1px" width="560" height="40" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="702.984375" y="3091.8"><tspan>Writable 是 Hadoop 的序列化格式, Hadoop 定义了这样一个 Writable 接口. 一个类要支持可</tspan></tspan><tspan x="702.984375" y="3109.8"><tspan>序列化只需实现这个接口即可</tspan></tspan></text></g></g><g id="2aad937bb4d6"><rect x="693.984375" y="3129" rx="1px" ry="1px" width="57" height="24" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="702.984375" y="3145.3"><tspan>快排法</tspan></tspan></text></g></g><g id="486bc42eca4b"><rect x="561.984375" y="3359.5" rx="1px" ry="1px" width="44" height="24" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="570.984375" y="3375.8"><tspan>规约</tspan></tspan></text></g></g><g id="26c08b0eabf0"><rect x="641.984375" y="3164.5" rx="1px" ry="1px" width="564" height="238" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="650.984375" y="3359.3"><tspan>每一个 map 都可能会产生大量的本地输出，Combiner 的作用就是对 map 端的输出先做一次</tspan></tspan><tspan x="650.984375" y="3377.3"><tspan>合并，以减少在 map 和 reduce 节点之间的数据传输量，以提高网络IO 性能，是 MapReduce</tspan></tspan><tspan x="650.984375" y="3395.3"><tspan>的一种优化手段之一</tspan></tspan></text></g><image xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="https://cdn2.processon.com/607f9972e4b0d94bcabcd36d?e=1618978690&amp;token=trhI0BY8QfVrIGn9nENop6JAc6l5nZuxhjQ62UfM:eBCxnlx1Pj-FZpPRJ56BAsqiyXw=" transform="translate(650.984375, 3166.5)" width="401" height="172"></image></g><g id="46927a80a12a"><rect x="641.984375" y="3414.5" rx="1px" ry="1px" width="918" height="40" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="650.984375" y="3429.3"><tspan>combiner 是 MR 程序中 Mapper 和 Reducer 之外的一种组件，combiner 组件的父类就是 Reducer，combiner 和 reducer 的区别在于运行的位置，Co</tspan></tspan><tspan x="650.984375" y="3447.3"><tspan>mbiner 是在每一个 maptask 所在的节点运行，Reducer 是接收全局所有 Mapper 的输出结果</tspan></tspan></text></g></g><g id="484ecc70884f"><rect x="641.984375" y="3492.75" rx="1px" ry="1px" width="70" height="24" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="650.984375" y="3509.05"><tspan>实现步骤</tspan></tspan></text></g></g><g id="ec11aa9c275a"><rect x="747.984375" y="3466.5" rx="1px" ry="1px" width="557" height="76" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="756.984375" y="3481.3"><tspan>1.自定义一个 combiner 继承 Reducer，重写 reduce 方法</tspan></tspan><tspan x="756.984375" y="3499.3"><tspan>2. 在 job 中设置 job.setCombinerClass(CustomCombiner.class)</tspan></tspan><tspan x="756.984375" y="3517.3"><tspan>3. combiner 能够应用的前提是不能影响最终的业务逻辑，而且，combiner 的输出 kv 应该跟</tspan></tspan><tspan x="756.984375" y="3535.3"><tspan>reducer 的输入 kv 类型要对应起来</tspan></tspan></text></g></g><g id="2972d860dd9f"><rect x="641.984375" y="3554.5" rx="1px" ry="1px" width="135" height="24" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="650.984375" y="3570.8"><tspan>样例：手机流量统计</tspan></tspan></text></g></g><g id="997c078cd0d1"><rect x="561.984375" y="3590" rx="1px" ry="1px" width="44" height="24" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="570.984375" y="3606.3"><tspan>分组</tspan></tspan></text></g></g><g id="c35ad7106b44"><rect x="466.09375" y="3775.25" rx="1px" ry="1px" width="61" height="23" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="475.09375" y="3791.55"><tspan>reduce</tspan></tspan></text></g></g><g id="c7fe77d78d42"><rect x="562.65625" y="3757.5" rx="1px" ry="1px" width="203" height="24" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="571.65625" y="3773.8"><tspan>继承Reducer，重写reduce方法</tspan></tspan></text></g></g><g id="58b308688362"><rect x="801.265625" y="3625.5" rx="1px" ry="1px" width="330" height="288" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="810.265625" y="3905.8"><tspan>样例</tspan></tspan></text></g><image xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="https://cdn2.processon.com/607f9c28e4b0c5be8ad3ee78?e=1618979384&amp;token=trhI0BY8QfVrIGn9nENop6JAc6l5nZuxhjQ62UfM:XCJxffVtv4N4o-6Lt6gYFXQP5mg=" transform="translate(810.265625, 3627.5)" width="312" height="256"></image></g><g id="adc4278f125f"><rect x="562.65625" y="3925" rx="1px" ry="1px" width="361" height="24" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="571.65625" y="3941.3"><tspan>继承OutputFormat, 用对应的接口，或者改写为自己的方法</tspan></tspan></text></g></g><g id="e55235554798"><rect x="466.09375" y="4359.25" rx="1px" ry="1px" width="200" height="23" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="475.09375" y="4375.55"><tspan>主类代码 (将八个步骤串到一起)</tspan></tspan></text></g></g><g id="65742fcc61a7"><rect x="701.625" y="3960.5" rx="1px" ry="1px" width="249" height="24" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="710.625" y="3976.8"><tspan>extends Configured implements Tool</tspan></tspan></text></g></g><g id="a5212561bbac"><rect x="701.625" y="4262.25" rx="1px" ry="1px" width="91" height="24" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="710.625" y="4278.55"><tspan>重写run方法</tspan></tspan></text></g></g><g id="12c19af0d804"><rect x="828.625" y="3996" rx="1px" ry="1px" width="239" height="24" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="837.625" y="4012.3"><tspan>创建job任务对象（Job.getInstance）</tspan></tspan></text></g></g><g id="c4d35b50f4c2"><rect x="828.625" y="4280" rx="1px" ry="1px" width="194" height="23" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="837.625" y="4296.3"><tspan>配置job任务对象（八个步骤）</tspan></tspan></text></g></g><g id="2dcf6351dae8"><rect x="1058.671875" y="4049.25" rx="1px" ry="1px" width="215" height="23" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="1067.671875" y="4065.55"><tspan>1. 指定文件的读取方式和读取路径</tspan></tspan></text></g></g><g id="508b2b88d731"><rect x="1309.28125" y="4031.5" rx="1px" ry="1px" width="173" height="24" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="1318.28125" y="4047.8"><tspan>job.setInputFortmatClass</tspan></tspan></text></g></g><g id="d81c0e255f57"><rect x="1309.28125" y="4067" rx="1px" ry="1px" width="210" height="24" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="1318.28125" y="4083.3"><tspan>TextInputFormat.addInputPath</tspan></tspan></text></g></g><g id="c64af8471739"><rect x="1058.671875" y="4138" rx="1px" ry="1px" width="178" height="23" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="1067.671875" y="4154.3"><tspan>2. 指定Map阶段的处理方式</tspan></tspan></text></g></g><g id="9fa04ac3a0bc"><rect x="1272.46875" y="4102.5" rx="1px" ry="1px" width="140" height="24" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="1281.46875" y="4118.8"><tspan>job.setMapperClass</tspan></tspan></text></g></g><g id="f2a5f173633e"><rect x="1272.46875" y="4138" rx="1px" ry="1px" width="153" height="24" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="1281.46875" y="4154.3"><tspan>设置Map阶段K2的类型</tspan></tspan></text></g></g><g id="a4fee2796b81"><rect x="1461.546875" y="4138" rx="1px" ry="1px" width="165" height="24" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="1470.546875" y="4154.3"><tspan>job.setMapOutKeyClass</tspan></tspan></text></g></g><g id="1e6aaf529ad4"><rect x="1272.46875" y="4173.5" rx="1px" ry="1px" width="154" height="24" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="1281.46875" y="4189.8"><tspan>设置Map阶段V2的类型</tspan></tspan></text></g></g><g id="373e78d1fc9b"><rect x="1462.078125" y="4173.5" rx="1px" ry="1px" width="198" height="24" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="1471.078125" y="4189.8"><tspan>job.setMapOutputValueClass</tspan></tspan></text></g></g><g id="946f8f7cbdf3"><rect x="1058.671875" y="4209" rx="1px" ry="1px" width="59" height="24" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="1067.671875" y="4225.3"><tspan>3. 分区</tspan></tspan></text></g></g><g id="36bb07229957"><rect x="1058.671875" y="4244.5" rx="1px" ry="1px" width="59" height="24" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="1067.671875" y="4260.8"><tspan>4. 排序</tspan></tspan></text></g></g><g id="1b06d7309b2a"><rect x="1058.671875" y="4280" rx="1px" ry="1px" width="59" height="24" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="1067.671875" y="4296.3"><tspan>5. 规约</tspan></tspan></text></g></g><g id="b6ad907bb527"><rect x="1058.671875" y="4315.5" rx="1px" ry="1px" width="59" height="24" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="1067.671875" y="4331.8"><tspan>6. 分组</tspan></tspan></text></g></g><g id="13159d702029"><rect x="1058.671875" y="4386.5" rx="1px" ry="1px" width="257" height="23" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="1067.671875" y="4402.8"><tspan>7. 指定reduce阶段的处理方式和数据类型</tspan></tspan></text></g></g><g id="4c6493374c00"><rect x="1351.84375" y="4351" rx="1px" ry="1px" width="142" height="24" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="1360.84375" y="4367.3"><tspan>job.setReducerClass</tspan></tspan></text></g></g><g id="6f43e105e125"><rect x="1351.84375" y="4386.5" rx="1px" ry="1px" width="171" height="24" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="1360.84375" y="4402.8"><tspan>设置Reduce阶段K3的类型</tspan></tspan></text></g></g><g id="8897b08181ce"><rect x="1558.8125" y="4386.5" rx="1px" ry="1px" width="153" height="24" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="1567.8125" y="4402.8"><tspan>job.setOuputKeyClass</tspan></tspan></text></g></g><g id="f3ef88fb86a1"><rect x="1351.84375" y="4422" rx="1px" ry="1px" width="172" height="24" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="1360.84375" y="4438.3"><tspan>设置Reduce阶段V3的类型</tspan></tspan></text></g></g><g id="df2b4a18c3da"><rect x="1559.34375" y="4422" rx="1px" ry="1px" width="170" height="24" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="1568.34375" y="4438.3"><tspan>job.setOutputValueClass</tspan></tspan></text></g></g><g id="1ef9bd140078"><rect x="1058.671875" y="4475.25" rx="1px" ry="1px" width="111" height="23" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="1067.671875" y="4491.55"><tspan>8. 设置输出类型</tspan></tspan></text></g></g><g id="271efacf07d9"><rect x="1205.28125" y="4457.5" rx="1px" ry="1px" width="185" height="24" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="1214.28125" y="4473.8"><tspan>job.setOutputFortmatClass</tspan></tspan></text></g></g><g id="6d6300be096c"><rect x="1205.28125" y="4493" rx="1px" ry="1px" width="227" height="24" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="1214.28125" y="4509.3"><tspan>TextOutputFormat.setOutputPath</tspan></tspan></text></g></g><g id="646e3a356837"><rect x="1058.671875" y="4528.5" rx="1px" ry="1px" width="96" height="24" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="1067.671875" y="4544.8"><tspan>等待任务结束</tspan></tspan></text></g></g><g id="7a0ceb89a414"><rect x="1190.671875" y="4528.5" rx="1px" ry="1px" width="364" height="24" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="1199.671875" y="4544.8"><tspan>boolean bl = job.waitForCompletion(true)  return bl?0:1</tspan></tspan></text></g></g><g id="34b242cb791f"><rect x="701.625" y="4661" rx="1px" ry="1px" width="49" height="24" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="710.625" y="4677.3"><tspan>main</tspan></tspan></text></g></g><g id="ade58fb39daf"><rect x="786.46875" y="4661" rx="1px" ry="1px" width="251" height="24" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="795.46875" y="4677.3"><tspan>启动job任务（ToolRunner.run），入口</tspan></tspan></text></g></g><g id="8525223cb9e6"><rect x="1073.9375" y="4564" rx="1px" ry="1px" width="380" height="218" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="1082.9375" y="4774.3"><tspan>样例</tspan></tspan></text></g><image xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="https://cdn2.processon.com/607f9c87e4b0c5be8ad3efe7?e=1618979479&amp;token=trhI0BY8QfVrIGn9nENop6JAc6l5nZuxhjQ62UfM:FxlkwRLkxvaHY8ImXPZ8j_G8E3o=" transform="translate(1082.9375, 4566)" width="362" height="186"></image></g><g id="91dda261c98c"><rect x="466.09375" y="4927.5" rx="1px" ry="1px" width="44" height="24" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="475.09375" y="4943.8"><tspan>运行</tspan></tspan></text></g></g><g id="a5db32679010"><rect x="546.09375" y="4829" rx="1px" ry="1px" width="96" height="23" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="555.09375" y="4845.3"><tspan>集群运行模式</tspan></tspan></text></g></g><g id="f8020e201e6c"><rect x="678.09375" y="4793.5" rx="1px" ry="1px" width="390" height="24" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="687.09375" y="4809.8"><tspan>1. 将mapreduce程序交给yarn集群，分发到很多节点上并发执行</tspan></tspan></text></g></g><g id="2bdfbd4826b8"><rect x="678.09375" y="4829" rx="1px" ry="1px" width="275" height="24" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="687.09375" y="4845.3"><tspan>2. 处理的数据和输出结果位于HDFS文件系统</tspan></tspan></text></g></g><g id="521f3d9de951"><rect x="678.09375" y="4864.5" rx="1px" ry="1px" width="459" height="24" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="687.09375" y="4880.8"><tspan>3. 实现步骤： 将程序打成JAR包，并上传，然后在集群上用hadoop命令启动</tspan></tspan></text></g></g><g id="8889d3033c4d"><rect x="1172.671875" y="4864.5" rx="1px" ry="1px" width="339" height="24" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="1181.671875" y="4880.8"><tspan>hadoop   jar    jar包名字.jar   jar包中主方法的全路径名</tspan></tspan></text></g></g><g id="5f3068d04390"><rect x="546.09375" y="4980.75" rx="1px" ry="1px" width="96" height="23" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="555.09375" y="4997.05"><tspan>本地运行模式</tspan></tspan></text></g></g><g id="ebe12dcaecbe"><rect x="678.09375" y="4900" rx="1px" ry="1px" width="320" height="185" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"></text></g><image xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="https://cdn2.processon.com/607f98cfe4b07192168b1855?e=1618978527&amp;token=trhI0BY8QfVrIGn9nENop6JAc6l5nZuxhjQ62UfM:YXZ9YZlPtYN9R7aGrr4ap06ssdU=" transform="translate(687.09375, 4902)" width="302" height="156"></image></g><g id="ac1321bdd87a"><rect x="317" y="946.046875" rx="5px" ry="5px" width="145" height="51" style="fill: #ffffff; stroke:rgb(51, 156, 168);stroke-width:3px;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="17px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="330" y="977.16875"><tspan>1. Hadoop概述</tspan></tspan></text></g></g><g id="00c5b25137f1"><rect x="497.984375" y="109.25" rx="1px" ry="1px" width="370" height="24" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="506.984375" y="125.55"><tspan>HDFS (Hadoop Distributed File System： 分布式文件存储)</tspan></tspan></text></g></g><g id="7124cc6dd0e2"><rect x="904.15625" y="65.5" rx="1px" ry="1px" width="83" height="23" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="913.15625" y="81.8"><tspan>适用场景：</tspan></tspan></text></g></g><g id="659da5e50f98"><rect x="1023.15625" y="30" rx="1px" ry="1px" width="852" height="24" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="1032.15625" y="46.3"><tspan>高吞吐量（high throughput）来访问应用程序的数据，适合那些有着超大数据集的应用程序，这有可能会以延迟为代价。（低延迟看HBASE）。</tspan></tspan></text></g></g><g id="25a59180ed3a"><rect x="1023.15625" y="65.5" rx="1px" ry="1px" width="374" height="24" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="1032.15625" y="81.8"><tspan>高容错性（fault-tolerant），设计用来部署在低廉的硬件上。</tspan></tspan></text></g></g><g id="590ee3113dae"><rect x="1023.15625" y="101" rx="1px" ry="1px" width="577" height="24" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="1032.15625" y="117.3"><tspan>以流式数据访问模式存储超大文件而设计的文件系统。流式数据访问：一次写入、多次读取模式。</tspan></tspan></text></g></g><g id="934b6e60378e"><rect x="904.15625" y="162.5" rx="1px" ry="1px" width="555" height="24" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="913.15625" y="178.8"><tspan>一个理想的分片大小往往是一个HDFS block的大小，默认是64MB（可以通过配置文件指定）</tspan></tspan></text></g></g><g id="d47fe2f72c51"><rect x="1495.109375" y="136.5" rx="1px" ry="1px" width="918" height="40" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="1504.109375" y="151.3"><tspan>大量的小文件：namenode存储着文件系统的元数据，文件数量的限制也由namenode的内存量决定。每个文件，索引目录以及块占大约150个字节，因此，</tspan></tspan><tspan x="1504.109375" y="169.3"><tspan>如果有一百万文件，每个文件占一个块，就至少需要300MB的内存。</tspan></tspan></text></g></g><g id="ce494b16defc"><rect x="1495.109375" y="188.5" rx="1px" ry="1px" width="338" height="24" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="1504.109375" y="204.8"><tspan>HDFS的块比磁盘的块大，目的是为了减少寻址的开销。</tspan></tspan></text></g></g><g id="9bd5320ffad9"><rect x="497.984375" y="725.75" rx="1px" ry="1px" width="92" height="23" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="506.984375" y="742.05"><tspan>MapReduce</tspan></tspan></text></g></g><g id="cd69d4f0b424"><rect x="626.265625" y="232.25" rx="1px" ry="1px" width="44" height="24" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="635.265625" y="248.55"><tspan>存因</tspan></tspan></text></g></g><g id="8c0c045380ba"><rect x="706.265625" y="224" rx="1px" ry="1px" width="918" height="40" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="715.265625" y="238.8"><tspan>寻址时间长，慢于传输速率的发展历史。如果数据的访问模式中包含大量的磁盘寻址，比较适合以批处理的方式处理需要分析整个数据集，mapreduce流式</tspan></tspan><tspan x="715.265625" y="256.8"><tspan>读取hdfs块。</tspan></tspan></text></g></g><g id="b8d2f5303784"><rect x="626.265625" y="311.5" rx="1px" ry="1px" width="83" height="23" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="635.265625" y="327.8"><tspan>分布式体现</tspan></tspan></text></g></g><g id="20c8e849d11a"><rect x="745.265625" y="276" rx="1px" ry="1px" width="383" height="24" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="754.265625" y="292.3"><tspan>一个基于集群的高性能并行计算平台（Cluster Infrastructure）</tspan></tspan></text></g></g><g id="b709753b3a8c"><rect x="745.265625" y="311.5" rx="1px" ry="1px" width="341" height="24" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="754.265625" y="327.8"><tspan>一个并行计算与运行软件框架（Software Framework）</tspan></tspan></text></g></g><g id="014b4d599cc3"><rect x="1122.203125" y="311.5" rx="1px" ry="1px" width="573" height="24" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="1131.203125" y="327.8"><tspan>将用户编写的业务逻辑代码和自带默认组件整合成一个完整的分布式运算程序，运行在 yarn 集群</tspan></tspan></text></g></g><g id="f942ce7e7dfc"><rect x="745.265625" y="347" rx="1px" ry="1px" width="446" height="24" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="754.265625" y="363.3"><tspan>一个并行程序设计模型与方法（Programming Model &amp; Methodology）</tspan></tspan></text></g></g><g id="776c8b7ee68d"><rect x="626.265625" y="673.75" rx="1px" ry="1px" width="109" height="24" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="635.265625" y="690.05"><tspan>架构和执行过程</tspan></tspan></text></g></g><g id="fd7401a1ed0e"><rect x="771.265625" y="382.5" rx="1px" ry="1px" width="380" height="247" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"></text></g><image xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="https://cdn2.processon.com/607da344e4b0dcf1d14a7696?e=1618850133&amp;token=trhI0BY8QfVrIGn9nENop6JAc6l5nZuxhjQ62UfM:Im0b9O6-qaf6qVSuPGkEzO2CxOg=" transform="translate(780.265625, 384.5)" width="362" height="218"></image></g><g id="2947b2b4113b"><rect x="771.265625" y="641.5" rx="1px" ry="1px" width="439" height="347" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"></text></g><image xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="https://cdn2.processon.com/607da4d0e4b0bc1d9eacd31f?e=1618850528&amp;token=trhI0BY8QfVrIGn9nENop6JAc6l5nZuxhjQ62UfM:MvSP-daqq3h5Uqfa375KBKRW71g=" transform="translate(780.265625, 643.5)" width="421" height="318"></image></g><g id="4e19af6405f0"><rect x="626.265625" y="1062" rx="1px" ry="1px" width="199" height="23" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="635.265625" y="1078.3"><tspan>数据类型：&lt;key,value&gt;键值对</tspan></tspan></text></g></g><g id="3de331285e62"><rect x="860.875" y="1000.5" rx="1px" ry="1px" width="499" height="24" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="869.875" y="1016.8"><tspan>数据流在走的时候，其实就是键值对的不断转换，把一个键值对变成另外一个键值对</tspan></tspan></text></g></g><g id="d13523a39964"><rect x="860.875" y="1036" rx="1px" ry="1px" width="874" height="24" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="869.875" y="1052.3"><tspan>MapReduce中的每个map任务可以细分2个阶段：record reader（input format类，决定对源文件的读取方式）、继承Mapper类（重写map方法）</tspan></tspan></text></g></g><g id="c8d1481d365f"><rect x="860.875" y="1071.5" rx="1px" ry="1px" width="804" height="24" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="869.875" y="1087.8"><tspan>shuffle阶段可以分为4步：分区（对数据打标记）、排序、规约（可选，减少网络数据的传输和拷贝）、分组（相同key放在同一个集合）</tspan></tspan></text></g></g><g id="95c30408746a"><rect x="860.875" y="1107" rx="1px" ry="1px" width="918" height="40" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="869.875" y="1121.8"><tspan>reduce任务可以分为2个阶段：排序与合并（编写reducer函数来实现逻辑，继承Reducer类，重写reduce逻辑）、选择输出格式（抽象成了OutputFormat</tspan></tspan><tspan x="869.875" y="1139.8"><tspan>类）</tspan></tspan></text></g></g><g id="02a81a23ae9e"><rect x="626.265625" y="1193.25" rx="1px" ry="1px" width="109" height="24" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="635.265625" y="1209.55"><tspan>被逐渐淘汰原因</tspan></tspan></text></g></g><g id="2f7d939a2505"><rect x="771.265625" y="1167.25" rx="1px" ry="1px" width="124" height="24" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="780.265625" y="1183.55"><tspan>1. 高昂的维护成本</tspan></tspan></text></g></g><g id="73088ec5722c"><rect x="930.875" y="1159" rx="1px" ry="1px" width="664" height="40" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="939.875" y="1173.8"><tspan>在应用过程中，每一个MapReduce任务都有可能出错，都需要重试和异常处理的机制。</tspan></tspan><tspan x="939.875" y="1191.8"><tspan>协调这些子MapReduce的任务往往需要和业务逻辑紧密耦合的状态机，过于复杂的维护让系统开发者苦不堪言。</tspan></tspan></text></g></g><g id="abe118782496"><rect x="771.265625" y="1219.25" rx="1px" ry="1px" width="150" height="24" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="780.265625" y="1235.55"><tspan>2. 复杂的性能优化配置</tspan></tspan></text></g></g><g id="585d31792a9a"><rect x="956.875" y="1211" rx="1px" ry="1px" width="918" height="40" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="965.875" y="1225.8"><tspan>在MapReduce的性能配置上花了非常多的时间。包括了缓冲大小(buffer size），分片多少（number of shards），预抓取策略（prefetch），缓存大小（c</tspan></tspan><tspan x="965.875" y="1243.8"><tspan>ache size）等等</tspan></tspan></text></g></g><g id="141acfc6e688"><rect x="1910.875" y="1219.25" rx="1px" ry="1px" width="186" height="24" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="1919.875" y="1235.55"><tspan>应对: google的动态分片技术</tspan></tspan></text></g></g><g id="0e340348cf1d"><rect x="497.984375" y="1575.25" rx="1px" ry="1px" width="46" height="24" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="506.984375" y="1591.55"><tspan>Yarn</tspan></tspan></text></g></g><g id="51945cf1427f"><rect x="580" y="1271.25" rx="1px" ry="1px" width="349" height="24" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="589" y="1287.55"><tspan>Yet Another Resource Negotiator: 分布式资源调度系统</tspan></tspan></text></g></g><g id="cfd1eb52982b"><rect x="965.296875" y="1263" rx="1px" ry="1px" width="918" height="40" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="974.296875" y="1277.8"><tspan>Hadoop1.0 中架构的缺陷，在 MapReduce 中，jobTracker 担负起了太多的责任了，接收任务是它，资源调度是它，监控 TaskTracker 运行情况还是它。</tspan></tspan><tspan x="974.296875" y="1295.8"><tspan>将 jobTracker 进行拆分，将其中部分功能拆解出来</tspan></tspan></text></g></g><g id="43a03d42f23c"><rect x="580" y="1332.75" rx="1px" ry="1px" width="70" height="23" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="589" y="1349.05"><tspan>主从架构</tspan></tspan></text></g></g><g id="ac96df121ae3"><rect x="686" y="1315" rx="1px" ry="1px" width="183" height="24" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="695" y="1331.3"><tspan>主节点：ResourceManager</tspan></tspan></text></g></g><g id="3727242fcf16"><rect x="904.765625" y="1315" rx="1px" ry="1px" width="200" height="24" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="913.765625" y="1331.3"><tspan>整个计算任务资源的调度和分配</tspan></tspan></text></g></g><g id="20652ccee7db"><rect x="686" y="1350.5" rx="1px" ry="1px" width="160" height="24" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="695" y="1366.8"><tspan>从节点：NodeManager</tspan></tspan></text></g></g><g id="88a14954475f"><rect x="882.265625" y="1350.5" rx="1px" ry="1px" width="109" height="24" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="891.265625" y="1366.8"><tspan>执行具体的运算</tspan></tspan></text></g></g><g id="02c45029802e"><rect x="580" y="1386" rx="1px" ry="1px" width="918" height="525" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="589" y="1759.8"><tspan>提交一个程序所经历的简单流程：</tspan></tspan><tspan x="589" y="1777.8"><tspan>1. Client 向 Yarn 提交 Application，这里我们假设是一个 MapReduce 作业。</tspan></tspan><tspan x="589" y="1795.8"><tspan>2. ResourceManager 向 NodeManager 通信，为该 Application 分配第一个容器。并在这个容器中运行这个应用程序对应的 ApplicationMaster。</tspan></tspan><tspan x="589" y="1813.8"><tspan>3. ApplicationMaster 启动以后，对 作业（也就是 Application） 进行拆分，拆分 task 出来，这些 task 可以运行在一个或多个容器中。然后向 Resource</tspan></tspan><tspan x="589" y="1831.8"><tspan>Manager 申请要运行程序的容器，并定时向 ResourceManager 发送心跳。</tspan></tspan><tspan x="589" y="1849.8"><tspan>4. 申请到容器后，ApplicationMaster 会去和容器对应的 NodeManager 通信，而后将作业分发到对应的 NodeManager 中的容器去运行，这里会将拆分</tspan></tspan><tspan x="589" y="1867.8"><tspan>后的 MapReduce 进行分发，对应容器中运行的可能是 Map 任务，也可能是 Reduce 任务。</tspan></tspan><tspan x="589" y="1885.8"><tspan>5. 容器中运行的任务会向 ApplicationMaster 发送心跳，汇报自身情况。当程序运行完成后， ApplicationMaster 再向 ResourceManager 注销并释放容器</tspan></tspan><tspan x="589" y="1903.8"><tspan>资源。</tspan></tspan></text></g><image xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="https://cdn2.processon.com/607da18de4b0f1528e420713?e=1618849694&amp;token=trhI0BY8QfVrIGn9nENop6JAc6l5nZuxhjQ62UfM:cSoHsMX5KiHok3rh70VTWUYDRP0=" transform="translate(589, 1388)" width="691" height="351"></image></g><g transform="translate(317, 8510)" id="sdjakdjak0"><g id="subline_e0e07edf31c1" transform="translate(0.5,-0.5)"></g><g transform="translate(0.5,0)"></g><g class="svg-summary-con" transform="translate(0.5,0.5)"></g></g><g transform="translate(317, 8168)" id="sdjakdjak1"><g id="subline_64b6b8f7da64" transform="translate(0.5,-0.5)"><path id="line_fdb18ebe7203" d="M 149 155.5 L 167 155.5 L 167 307 A 4 4 0 0 0 171 311 L 734.7811889648438 311" p="64b6b8f7da64" stroke="#3aa9ce" fill="none" stroke-linecap="square" stroke-width="2"></path></g><g transform="translate(0.5,0)"></g><g class="svg-summary-con" transform="translate(0.5,0.5)"></g></g><g transform="translate(317, 8077)" id="sdjakdjak2"><g id="subline_4a00ef279536" transform="translate(0.5,-0.5)"><path id="line_f2b631c733fb" d="M 262 30 L 280 30 L 280 30 A 4 4 0 0 1 284 26 L 435.39080810546875 26" p="4a00ef279536" stroke="#3aa9ce" fill="none" stroke-linecap="square" stroke-width="2"></path><path id="line_5d2b8ac69dd0" d="M 262 30 L 280 30 L 280 61 L 526.3908081054688 61" p="4a00ef279536" stroke="#3aa9ce" fill="none" stroke-linecap="square" stroke-width="2"></path></g><g transform="translate(0.5,0)"></g><g class="svg-summary-con" transform="translate(0.5,0.5)"></g></g><g transform="translate(317, 6368)" id="sdjakdjak3"><g id="subline_9c9047803e79" transform="translate(0.5,-0.5)"><path id="line_ff77f8d17ff8" d="M 94 839 L 112 839 L 112 30 A 4 4 0 0 1 116 26 L 282 26" p="9c9047803e79" stroke="#3aa9ce" fill="none" stroke-linecap="square" stroke-width="2"></path><path id="line_cfd345711da5" d="M 282 26 L 300 26 L 300 26 L 375.06243896484375 26" p="ff77f8d17ff8" stroke="#3aa9ce" fill="none" stroke-linecap="square" stroke-width="2"></path><path id="line_ef94a68d1489" d="M 94 839 L 112 839 L 112 65 A 4 4 0 0 1 116 61 L 280 61" p="9c9047803e79" stroke="#3aa9ce" fill="none" stroke-linecap="square" stroke-width="2"></path><path id="line_68abd8b375cf" d="M 94 839 L 112 839 L 112 456 A 4 4 0 0 1 116 452 L 238 452" p="9c9047803e79" stroke="#3aa9ce" fill="none" stroke-linecap="square" stroke-width="2"></path><path id="line_bf4718efc88f" d="M 238 452 L 256 452 L 256 224 A 4 4 0 0 1 260 220 L 332.81256103515625 220" p="68abd8b375cf" stroke="#3aa9ce" fill="none" stroke-linecap="square" stroke-width="2"></path><path id="line_b07600f7091a" d="M 332.81256103515625 220 L 351 220 L 351 341 A 4 4 0 0 0 355 345 L 1177.4844970703125 345" p="bf4718efc88f" stroke="#3aa9ce" fill="none" stroke-linecap="square" stroke-width="2"></path><path id="line_ea038d3172f2" d="M 238 452 L 256 452 L 256 592 A 4 4 0 0 0 260 596 L 347.81256103515625 596" p="68abd8b375cf" stroke="#3aa9ce" fill="none" stroke-linecap="square" stroke-width="2"></path><path id="line_c37847cd6c41" d="M 347.81256103515625 596 L 366 596 L 366 636 A 4 4 0 0 0 370 640 L 1109.3749389648438 640" p="ea038d3172f2" stroke="#3aa9ce" fill="none" stroke-linecap="square" stroke-width="2"></path><path id="line_335659797d3b" d="M 347.81256103515625 596 L 366 596 L 366 738 A 4 4 0 0 0 370 742 L 466.37493896484375 742" p="ea038d3172f2" stroke="#3aa9ce" fill="none" stroke-linecap="square" stroke-width="2"></path><path id="line_6f1b224a2bc0" d="M 466.37493896484375 742 L 485 742 L 485 805 A 4 4 0 0 0 489 809 L 1253.3751831054688 809" p="335659797d3b" stroke="#3aa9ce" fill="none" stroke-linecap="square" stroke-width="2"></path><path id="line_e6b40247d0c6" d="M 94 839 L 112 839 L 112 928 A 4 4 0 0 0 116 932 L 228 932" p="9c9047803e79" stroke="#3aa9ce" fill="none" stroke-linecap="square" stroke-width="2"></path><path id="line_2fc1b66ce068" d="M 228 932 L 246 932 L 246 1016 A 4 4 0 0 0 250 1020 L 1181.6093139648438 1020" p="e6b40247d0c6" stroke="#3aa9ce" fill="none" stroke-linecap="square" stroke-width="2"></path><path id="line_5927e337a61a" d="M 94 839 L 112 839 L 112 1132 A 4 4 0 0 0 116 1136 L 228 1136" p="9c9047803e79" stroke="#3aa9ce" fill="none" stroke-linecap="square" stroke-width="2"></path><path id="line_c3e5b34686dd" d="M 228 1136 L 246 1136 L 246 1211 A 4 4 0 0 0 250 1215 L 943.6093139648438 1215" p="5927e337a61a" stroke="#3aa9ce" fill="none" stroke-linecap="square" stroke-width="2"></path><path id="line_8d2e5f6cd3b5" d="M 94 839 L 112 839 L 112 1371 A 4 4 0 0 0 116 1375 L 206 1375" p="9c9047803e79" stroke="#3aa9ce" fill="none" stroke-linecap="square" stroke-width="2"></path><path id="line_baa293b08bc4" d="M 206 1375 L 224 1375 L 224 1375 L 325.34375 1375" p="8d2e5f6cd3b5" stroke="#3aa9ce" fill="none" stroke-linecap="square" stroke-width="2"></path><path id="line_4e403a6ad967" d="M 325.34375 1375 L 344 1375 L 344 1496 A 4 4 0 0 0 348 1500 L 1279.3436889648438 1500" p="baa293b08bc4" stroke="#3aa9ce" fill="none" stroke-linecap="square" stroke-width="2"></path><path id="line_d64ee004546b" d="M 94 839 L 112 839 L 112 1602 A 4 4 0 0 0 116 1606 L 294 1606" p="9c9047803e79" stroke="#3aa9ce" fill="none" stroke-linecap="square" stroke-width="2"></path><path id="line_3e764920f33e" d="M 294 1606 L 312 1606 L 312 1674 A 4 4 0 0 0 316 1678 L 1247.84375 1678" p="d64ee004546b" stroke="#3aa9ce" fill="none" stroke-linecap="square" stroke-width="2"></path></g><g transform="translate(0.5,0)"></g><g class="svg-summary-con" transform="translate(0.5,0.5)"></g></g><g transform="translate(317, 5843)" id="sdjakdjak4"><g id="subline_7dbc95fa9f79" transform="translate(0.5,-0.5)"><path id="line_5c9ccac3fe56" d="M 77 248 L 95 248 L 95 30 A 4 4 0 0 1 99 26 L 235 26" p="7dbc95fa9f79" stroke="#e85d4e" fill="none" stroke-linecap="square" stroke-width="2"></path><path id="line_136a51faedbe" d="M 77 248 L 95 248 L 95 164 A 4 4 0 0 1 99 160 L 413 160" p="7dbc95fa9f79" stroke="#e85d4e" fill="none" stroke-linecap="square" stroke-width="2"></path><path id="line_eb7f040449a8" d="M 413 160 L 431 160 L 431 255 A 4 4 0 0 0 435 259 L 903.046875 259" p="136a51faedbe" stroke="#e85d4e" fill="none" stroke-linecap="square" stroke-width="2"></path><path id="line_986a245c1cf5" d="M 77 248 L 95 248 L 95 391 A 4 4 0 0 0 99 395 L 337 395" p="7dbc95fa9f79" stroke="#e85d4e" fill="none" stroke-linecap="square" stroke-width="2"></path><path id="line_53b4e6e3ecaf" d="M 337 395 L 355 395 L 355 491 A 4 4 0 0 0 359 495 L 837.1875 495" p="986a245c1cf5" stroke="#e85d4e" fill="none" stroke-linecap="square" stroke-width="2"></path></g><g transform="translate(0.5,0)"></g><g class="svg-summary-con" transform="translate(0.5,0.5)"></g></g><g transform="translate(317, 5591)" id="sdjakdjak5"><g id="subline_aa32d8bc8e22" transform="translate(0.5,-0.5)"><path id="line_9d325fd4992b" d="M 154 111 L 172 111 L 172 164 A 4 4 0 0 0 176 168 L 1108.265625 168" p="aa32d8bc8e22" stroke="rgb(255,204,204)" fill="none" stroke-linecap="square" stroke-width="2"></path><path id="line_2535c94f890c" d="M 1108.265625 168 L 1127 168 L 1127 218 A 4 4 0 0 0 1131 222 L 1688.265625 222" p="9d325fd4992b" stroke="rgb(255,204,204)" fill="none" stroke-linecap="square" stroke-width="2"></path></g><g transform="translate(0.5,0)"></g><g class="svg-summary-con" transform="translate(0.5,0.5)"></g></g><g transform="translate(317, 5117)" id="sdjakdjak6"><g id="subline_cdce42bd6a07" transform="translate(0.5,-0.5)"><path id="line_4b8f374d4da6" d="M 131 222 L 149 222 L 149 275 A 4 4 0 0 0 153 279 L 733.875 279" p="cdce42bd6a07" stroke="#e85d4e" fill="none" stroke-linecap="square" stroke-width="2"></path><path id="line_a76bfed912f4" d="M 733.875 279 L 752 279 L 752 46 A 4 4 0 0 1 756 42 L 1302.984375 42" p="4b8f374d4da6" stroke="#e85d4e" fill="none" stroke-linecap="square" stroke-width="2"></path><path id="line_4806dde0dcb0" d="M 733.875 279 L 752 279 L 752 116 A 4 4 0 0 1 756 112 L 1687.984375 112" p="4b8f374d4da6" stroke="#e85d4e" fill="none" stroke-linecap="square" stroke-width="2"></path><path id="line_35d7e17e5ba1" d="M 733.875 279 L 752 279 L 752 168 A 4 4 0 0 1 756 164 L 1277.984375 164" p="4b8f374d4da6" stroke="#e85d4e" fill="none" stroke-linecap="square" stroke-width="2"></path><path id="line_02bae1e47e89" d="M 733.875 279 L 752 279 L 752 220 A 4 4 0 0 1 756 216 L 1293.984375 216" p="4b8f374d4da6" stroke="#e85d4e" fill="none" stroke-linecap="square" stroke-width="2"></path><path id="line_ee788c916059" d="M 733.875 279 L 752 279 L 752 286 L 1306.984375 286" p="4b8f374d4da6" stroke="#e85d4e" fill="none" stroke-linecap="square" stroke-width="2"></path><path id="line_4c62797c80fd" d="M 733.875 279 L 752 279 L 752 334 A 4 4 0 0 0 756 338 L 1322.984375 338" p="4b8f374d4da6" stroke="#e85d4e" fill="none" stroke-linecap="square" stroke-width="2"></path><path id="line_8a0dc73f7506" d="M 733.875 279 L 752 279 L 752 440 A 4 4 0 0 0 756 444 L 1687.984375 444" p="4b8f374d4da6" stroke="#e85d4e" fill="none" stroke-linecap="square" stroke-width="2"></path></g><g transform="translate(0.5,0)"></g><g class="svg-summary-con" transform="translate(0.5,0.5)"></g></g><g transform="translate(317, 1943)" id="sdjakdjak7"><g id="subline_84d1cdcf6f18" transform="translate(0.5,-0.5)"><path id="line_5b1fe40e36b3" d="M 113 1572 L 131 1572 L 131 30 A 4 4 0 0 1 135 26 L 460.09375 26" p="84d1cdcf6f18" stroke="rgb(232, 124, 37)" fill="none" stroke-linecap="square" stroke-width="2"></path><path id="line_faa1c06621d4" d="M 113 1572 L 131 1572 L 131 184 A 4 4 0 0 1 135 180 L 195.09375 180" p="84d1cdcf6f18" stroke="rgb(232, 124, 37)" fill="none" stroke-linecap="square" stroke-width="2"></path><path id="line_805a0f1a1b64" d="M 195.09375 180 L 214 180 L 214 65 A 4 4 0 0 1 218 61 L 579.765625 61" p="faa1c06621d4" stroke="rgb(232, 124, 37)" fill="none" stroke-linecap="square" stroke-width="2"></path><path id="line_cf401253873e" d="M 195.09375 180 L 214 180 L 214 200 L 416.765625 200" p="faa1c06621d4" stroke="rgb(232, 124, 37)" fill="none" stroke-linecap="square" stroke-width="2"></path><path id="line_d05f8b78e73c" d="M 416.765625 200 L 435 200 L 435 299 A 4 4 0 0 0 439 303 L 892.28125 303" p="cf401253873e" stroke="rgb(232, 124, 37)" fill="none" stroke-linecap="square" stroke-width="2"></path><path id="line_893a584065da" d="M 113 1572 L 131 1572 L 131 1009 A 4 4 0 0 1 135 1005 L 209.09375 1005" p="84d1cdcf6f18" stroke="rgb(232, 124, 37)" fill="none" stroke-linecap="square" stroke-width="2"></path><path id="line_d83f29297077" d="M 209.09375 1005 L 228 1005 L 228 691 A 4 4 0 0 1 232 687 L 288.984375 687" p="893a584065da" stroke="rgb(232, 124, 37)" fill="none" stroke-linecap="square" stroke-width="2"></path><path id="line_beb34995dbf4" d="M 288.984375 687 L 307 687 L 307 342 A 4 4 0 0 1 311 338 L 892.984375 338" p="d83f29297077" stroke="rgb(232, 124, 37)" fill="none" stroke-linecap="square" stroke-width="2"></path><path id="line_f99e50974002" d="M 288.984375 687 L 307 687 L 307 550 A 4 4 0 0 1 311 546 L 821.984375 546" p="d83f29297077" stroke="rgb(232, 124, 37)" fill="none" stroke-linecap="square" stroke-width="2"></path><path id="line_e2667f8ca467" d="M 288.984375 687 L 307 687 L 307 863 A 4 4 0 0 0 311 867 L 617.984375 867" p="d83f29297077" stroke="rgb(232, 124, 37)" fill="none" stroke-linecap="square" stroke-width="2"></path><path id="line_c71fdd46579a" d="M 288.984375 687 L 307 687 L 307 964 A 4 4 0 0 0 311 968 L 572.984375 968" p="d83f29297077" stroke="rgb(232, 124, 37)" fill="none" stroke-linecap="square" stroke-width="2"></path><path id="line_d1717d06ebef" d="M 572.984375 968 L 591 968 L 591 1031 A 4 4 0 0 0 595 1035 L 1200.8125 1035" p="c71fdd46579a" stroke="rgb(232, 124, 37)" fill="none" stroke-linecap="square" stroke-width="2"></path><path id="line_e52e93e11f82" d="M 209.09375 1005 L 228 1005 L 228 1138 A 4 4 0 0 0 232 1142 L 340.984375 1142" p="893a584065da" stroke="rgb(232, 124, 37)" fill="none" stroke-linecap="square" stroke-width="2"></path><path id="line_d561617a6c7e" d="M 340.984375 1142 L 359 1142 L 359 1124 L 915.984375 1124" p="e52e93e11f82" stroke="rgb(232, 124, 37)" fill="none" stroke-linecap="square" stroke-width="2"></path><path id="line_7e3a62303be1" d="M 340.984375 1142 L 359 1142 L 359 1172 A 4 4 0 0 0 363 1176 L 936.984375 1176" p="e52e93e11f82" stroke="rgb(232, 124, 37)" fill="none" stroke-linecap="square" stroke-width="2"></path><path id="line_2aad937bb4d6" d="M 340.984375 1142 L 359 1142 L 359 1208 A 4 4 0 0 0 363 1212 L 433.984375 1212" p="e52e93e11f82" stroke="rgb(232, 124, 37)" fill="none" stroke-linecap="square" stroke-width="2"></path><path id="line_486bc42eca4b" d="M 209.09375 1005 L 228 1005 L 228 1438 A 4 4 0 0 0 232 1442 L 288.984375 1442" p="893a584065da" stroke="rgb(232, 124, 37)" fill="none" stroke-linecap="square" stroke-width="2"></path><path id="line_26c08b0eabf0" d="M 288.984375 1442 L 307 1442 L 307 1461 L 888.984375 1461" p="486bc42eca4b" stroke="rgb(232, 124, 37)" fill="none" stroke-linecap="square" stroke-width="2"></path><path id="line_46927a80a12a" d="M 288.984375 1442 L 307 1442 L 307 1509 A 4 4 0 0 0 311 1513 L 1242.984375 1513" p="486bc42eca4b" stroke="rgb(232, 124, 37)" fill="none" stroke-linecap="square" stroke-width="2"></path><path id="line_484ecc70884f" d="M 288.984375 1442 L 307 1442 L 307 1571 A 4 4 0 0 0 311 1575 L 394.984375 1575" p="486bc42eca4b" stroke="rgb(232, 124, 37)" fill="none" stroke-linecap="square" stroke-width="2"></path><path id="line_ec11aa9c275a" d="M 394.984375 1575 L 413 1575 L 413 1597 A 4 4 0 0 0 417 1601 L 987.984375 1601" p="484ecc70884f" stroke="rgb(232, 124, 37)" fill="none" stroke-linecap="square" stroke-width="2"></path><path id="line_2972d860dd9f" d="M 288.984375 1442 L 307 1442 L 307 1633 A 4 4 0 0 0 311 1637 L 459.984375 1637" p="486bc42eca4b" stroke="rgb(232, 124, 37)" fill="none" stroke-linecap="square" stroke-width="2"></path><path id="line_997c078cd0d1" d="M 209.09375 1005 L 228 1005 L 228 1669 A 4 4 0 0 0 232 1673 L 288.984375 1673" p="893a584065da" stroke="rgb(232, 124, 37)" fill="none" stroke-linecap="square" stroke-width="2"></path><path id="line_c35ad7106b44" d="M 113 1572 L 131 1572 L 131 1852 A 4 4 0 0 0 135 1856 L 210.09375 1856" p="84d1cdcf6f18" stroke="rgb(232, 124, 37)" fill="none" stroke-linecap="square" stroke-width="2"></path><path id="line_c7fe77d78d42" d="M 210.09375 1856 L 229 1856 L 229 1840 L 448.65625 1840" p="c35ad7106b44" stroke="rgb(232, 124, 37)" fill="none" stroke-linecap="square" stroke-width="2"></path><path id="line_58b308688362" d="M 448.65625 1840 L 467 1840 L 467 1968 A 4 4 0 0 0 471 1972 L 814.265625 1972" p="c7fe77d78d42" stroke="rgb(232, 124, 37)" fill="none" stroke-linecap="square" stroke-width="2"></path><path id="line_adc4278f125f" d="M 210.09375 1856 L 229 1856 L 229 2004 A 4 4 0 0 0 233 2008 L 606.65625 2008" p="c35ad7106b44" stroke="rgb(232, 124, 37)" fill="none" stroke-linecap="square" stroke-width="2"></path><path id="line_e55235554798" d="M 113 1572 L 131 1572 L 131 2436 A 4 4 0 0 0 135 2440 L 349.09375 2440" p="84d1cdcf6f18" stroke="rgb(232, 124, 37)" fill="none" stroke-linecap="square" stroke-width="2"></path><path id="line_65742fcc61a7" d="M 349.09375 2440 L 368 2440 L 368 2047 A 4 4 0 0 1 372 2043 L 633.625 2043" p="e55235554798" stroke="rgb(232, 124, 37)" fill="none" stroke-linecap="square" stroke-width="2"></path><path id="line_a5212561bbac" d="M 349.09375 2440 L 368 2440 L 368 2349 A 4 4 0 0 1 372 2345 L 475.625 2345" p="e55235554798" stroke="rgb(232, 124, 37)" fill="none" stroke-linecap="square" stroke-width="2"></path><path id="line_12c19af0d804" d="M 475.625 2345 L 494 2345 L 494 2083 A 4 4 0 0 1 498 2079 L 750.625 2079" p="a5212561bbac" stroke="rgb(232, 124, 37)" fill="none" stroke-linecap="square" stroke-width="2"></path><path id="line_c4d35b50f4c2" d="M 475.625 2345 L 494 2345 L 494 2361 L 705.625 2361" p="a5212561bbac" stroke="rgb(232, 124, 37)" fill="none" stroke-linecap="square" stroke-width="2"></path><path id="line_2dcf6351dae8" d="M 705.625 2361 L 724 2361 L 724 2134 A 4 4 0 0 1 728 2130 L 956.671875 2130" p="c4d35b50f4c2" stroke="rgb(232, 124, 37)" fill="none" stroke-linecap="square" stroke-width="2"></path><path id="line_508b2b88d731" d="M 956.671875 2130 L 975 2130 L 975 2114 L 1165.28125 2114" p="2dcf6351dae8" stroke="rgb(232, 124, 37)" fill="none" stroke-linecap="square" stroke-width="2"></path><path id="line_d81c0e255f57" d="M 956.671875 2130 L 975 2130 L 975 2150 L 1202.28125 2150" p="2dcf6351dae8" stroke="rgb(232, 124, 37)" fill="none" stroke-linecap="square" stroke-width="2"></path><path id="line_c64af8471739" d="M 705.625 2361 L 724 2361 L 724 2223 A 4 4 0 0 1 728 2219 L 919.671875 2219" p="c4d35b50f4c2" stroke="rgb(232, 124, 37)" fill="none" stroke-linecap="square" stroke-width="2"></path><path id="line_9fa04ac3a0bc" d="M 919.671875 2219 L 938 2219 L 938 2189 A 4 4 0 0 1 942 2185 L 1095.46875 2185" p="c64af8471739" stroke="rgb(232, 124, 37)" fill="none" stroke-linecap="square" stroke-width="2"></path><path id="line_f2a5f173633e" d="M 919.671875 2219 L 938 2219 L 938 2220 L 1108.46875 2220" p="c64af8471739" stroke="rgb(232, 124, 37)" fill="none" stroke-linecap="square" stroke-width="2"></path><path id="line_a4fee2796b81" d="M 1108.46875 2220 L 1127 2220 L 1127 2220 L 1309.546875 2220" p="f2a5f173633e" stroke="rgb(232, 124, 37)" fill="none" stroke-linecap="square" stroke-width="2"></path><path id="line_1e6aaf529ad4" d="M 919.671875 2219 L 938 2219 L 938 2252 A 4 4 0 0 0 942 2256 L 1109.46875 2256" p="c64af8471739" stroke="rgb(232, 124, 37)" fill="none" stroke-linecap="square" stroke-width="2"></path><path id="line_373e78d1fc9b" d="M 1109.46875 2256 L 1128 2256 L 1128 2256 L 1343.078125 2256" p="1e6aaf529ad4" stroke="rgb(232, 124, 37)" fill="none" stroke-linecap="square" stroke-width="2"></path><path id="line_946f8f7cbdf3" d="M 705.625 2361 L 724 2361 L 724 2296 A 4 4 0 0 1 728 2292 L 800.671875 2292" p="c4d35b50f4c2" stroke="rgb(232, 124, 37)" fill="none" stroke-linecap="square" stroke-width="2"></path><path id="line_36bb07229957" d="M 705.625 2361 L 724 2361 L 724 2331 A 4 4 0 0 1 728 2327 L 800.671875 2327" p="c4d35b50f4c2" stroke="rgb(232, 124, 37)" fill="none" stroke-linecap="square" stroke-width="2"></path><path id="line_1b06d7309b2a" d="M 705.625 2361 L 724 2361 L 724 2362 L 800.671875 2362" p="c4d35b50f4c2" stroke="rgb(232, 124, 37)" fill="none" stroke-linecap="square" stroke-width="2"></path><path id="line_b6ad907bb527" d="M 705.625 2361 L 724 2361 L 724 2394 A 4 4 0 0 0 728 2398 L 800.671875 2398" p="c4d35b50f4c2" stroke="rgb(232, 124, 37)" fill="none" stroke-linecap="square" stroke-width="2"></path><path id="line_13159d702029" d="M 705.625 2361 L 724 2361 L 724 2464 A 4 4 0 0 0 728 2468 L 998.671875 2468" p="c4d35b50f4c2" stroke="rgb(232, 124, 37)" fill="none" stroke-linecap="square" stroke-width="2"></path><path id="line_4c6493374c00" d="M 998.671875 2468 L 1017 2468 L 1017 2438 A 4 4 0 0 1 1021 2434 L 1176.84375 2434" p="13159d702029" stroke="rgb(232, 124, 37)" fill="none" stroke-linecap="square" stroke-width="2"></path><path id="line_6f43e105e125" d="M 998.671875 2468 L 1017 2468 L 1017 2469 L 1205.84375 2469" p="13159d702029" stroke="rgb(232, 124, 37)" fill="none" stroke-linecap="square" stroke-width="2"></path><path id="line_8897b08181ce" d="M 1205.84375 2469 L 1224 2469 L 1224 2469 L 1394.8125 2469" p="6f43e105e125" stroke="rgb(232, 124, 37)" fill="none" stroke-linecap="square" stroke-width="2"></path><path id="line_f3ef88fb86a1" d="M 998.671875 2468 L 1017 2468 L 1017 2501 A 4 4 0 0 0 1021 2505 L 1206.84375 2505" p="13159d702029" stroke="rgb(232, 124, 37)" fill="none" stroke-linecap="square" stroke-width="2"></path><path id="line_df2b4a18c3da" d="M 1206.84375 2505 L 1225 2505 L 1225 2505 L 1412.34375 2505" p="f3ef88fb86a1" stroke="rgb(232, 124, 37)" fill="none" stroke-linecap="square" stroke-width="2"></path><path id="line_1ef9bd140078" d="M 705.625 2361 L 724 2361 L 724 2552 A 4 4 0 0 0 728 2556 L 852.671875 2556" p="c4d35b50f4c2" stroke="rgb(232, 124, 37)" fill="none" stroke-linecap="square" stroke-width="2"></path><path id="line_271efacf07d9" d="M 852.671875 2556 L 871 2556 L 871 2540 L 1073.28125 2540" p="1ef9bd140078" stroke="rgb(232, 124, 37)" fill="none" stroke-linecap="square" stroke-width="2"></path><path id="line_6d6300be096c" d="M 852.671875 2556 L 871 2556 L 871 2576 L 1115.28125 2576" p="1ef9bd140078" stroke="rgb(232, 124, 37)" fill="none" stroke-linecap="square" stroke-width="2"></path><path id="line_646e3a356837" d="M 705.625 2361 L 724 2361 L 724 2607 A 4 4 0 0 0 728 2611 L 837.671875 2611" p="c4d35b50f4c2" stroke="rgb(232, 124, 37)" fill="none" stroke-linecap="square" stroke-width="2"></path><path id="line_7a0ceb89a414" d="M 837.671875 2611 L 856 2611 L 856 2611 L 1237.671875 2611" p="646e3a356837" stroke="rgb(232, 124, 37)" fill="none" stroke-linecap="square" stroke-width="2"></path><path id="line_34b242cb791f" d="M 349.09375 2440 L 368 2440 L 368 2740 A 4 4 0 0 0 372 2744 L 433.625 2744" p="e55235554798" stroke="rgb(232, 124, 37)" fill="none" stroke-linecap="square" stroke-width="2"></path><path id="line_ade58fb39daf" d="M 433.625 2744 L 452 2744 L 452 2744 L 720.46875 2744" p="34b242cb791f" stroke="rgb(232, 124, 37)" fill="none" stroke-linecap="square" stroke-width="2"></path><path id="line_8525223cb9e6" d="M 720.46875 2744 L 739 2744 L 739 2837 A 4 4 0 0 0 743 2841 L 1136.9375 2841" p="ade58fb39daf" stroke="rgb(232, 124, 37)" fill="none" stroke-linecap="square" stroke-width="2"></path><path id="line_91dda261c98c" d="M 113 1572 L 131 1572 L 131 3006 A 4 4 0 0 0 135 3010 L 193.09375 3010" p="84d1cdcf6f18" stroke="rgb(232, 124, 37)" fill="none" stroke-linecap="square" stroke-width="2"></path><path id="line_a5db32679010" d="M 193.09375 3010 L 212 3010 L 212 2914 A 4 4 0 0 1 216 2910 L 325.09375 2910" p="91dda261c98c" stroke="rgb(232, 124, 37)" fill="none" stroke-linecap="square" stroke-width="2"></path><path id="line_f8020e201e6c" d="M 325.09375 2910 L 344 2910 L 344 2880 A 4 4 0 0 1 348 2876 L 751.09375 2876" p="a5db32679010" stroke="rgb(232, 124, 37)" fill="none" stroke-linecap="square" stroke-width="2"></path><path id="line_2bdfbd4826b8" d="M 325.09375 2910 L 344 2910 L 344 2911 L 636.09375 2911" p="a5db32679010" stroke="rgb(232, 124, 37)" fill="none" stroke-linecap="square" stroke-width="2"></path><path id="line_521f3d9de951" d="M 325.09375 2910 L 344 2910 L 344 2943 A 4 4 0 0 0 348 2947 L 820.09375 2947" p="a5db32679010" stroke="rgb(232, 124, 37)" fill="none" stroke-linecap="square" stroke-width="2"></path><path id="line_8889d3033c4d" d="M 820.09375 2947 L 839 2947 L 839 2947 L 1194.671875 2947" p="521f3d9de951" stroke="rgb(232, 124, 37)" fill="none" stroke-linecap="square" stroke-width="2"></path><path id="line_5f3068d04390" d="M 193.09375 3010 L 212 3010 L 212 3058 A 4 4 0 0 0 216 3062 L 325.09375 3062" p="91dda261c98c" stroke="rgb(232, 124, 37)" fill="none" stroke-linecap="square" stroke-width="2"></path><path id="line_ebe12dcaecbe" d="M 325.09375 3062 L 344 3062 L 344 3139 A 4 4 0 0 0 348 3143 L 681.09375 3143" p="5f3068d04390" stroke="rgb(232, 124, 37)" fill="none" stroke-linecap="square" stroke-width="2"></path></g><g transform="translate(0.5,0)"></g><g class="svg-summary-con" transform="translate(0.5,0.5)"></g></g><g transform="translate(317, 30)" id="sdjakdjak8"><g id="subline_ac1321bdd87a" transform="translate(0.5,-0.5)"><path id="line_00c5b25137f1" d="M 145 942 L 163 942 L 163 109 A 4 4 0 0 1 167 105 L 550.984375 105" p="ac1321bdd87a" stroke="rgb(51, 156, 168)" fill="none" stroke-linecap="square" stroke-width="2"></path><path id="line_7124cc6dd0e2" d="M 550.984375 105 L 569 105 L 569 64 A 4 4 0 0 1 573 60 L 670.15625 60" p="00c5b25137f1" stroke="rgb(51, 156, 168)" fill="none" stroke-linecap="square" stroke-width="2"></path><path id="line_659da5e50f98" d="M 670.15625 60 L 689 60 L 689 30 A 4 4 0 0 1 693 26 L 1558.15625 26" p="7124cc6dd0e2" stroke="rgb(51, 156, 168)" fill="none" stroke-linecap="square" stroke-width="2"></path><path id="line_25a59180ed3a" d="M 670.15625 60 L 689 60 L 689 61 L 1080.15625 61" p="7124cc6dd0e2" stroke="rgb(51, 156, 168)" fill="none" stroke-linecap="square" stroke-width="2"></path><path id="line_590ee3113dae" d="M 670.15625 60 L 689 60 L 689 93 A 4 4 0 0 0 693 97 L 1283.15625 97" p="7124cc6dd0e2" stroke="rgb(51, 156, 168)" fill="none" stroke-linecap="square" stroke-width="2"></path><path id="line_934b6e60378e" d="M 550.984375 105 L 569 105 L 569 154 A 4 4 0 0 0 573 158 L 1142.15625 158" p="00c5b25137f1" stroke="rgb(51, 156, 168)" fill="none" stroke-linecap="square" stroke-width="2"></path><path id="line_d47fe2f72c51" d="M 1142.15625 158 L 1161 158 L 1161 148 L 2096.109375 148" p="934b6e60378e" stroke="rgb(51, 156, 168)" fill="none" stroke-linecap="square" stroke-width="2"></path><path id="line_ce494b16defc" d="M 1142.15625 158 L 1161 158 L 1161 180 A 4 4 0 0 0 1165 184 L 1516.109375 184" p="934b6e60378e" stroke="rgb(51, 156, 168)" fill="none" stroke-linecap="square" stroke-width="2"></path><path id="line_9bd5320ffad9" d="M 145 942 L 163 942 L 163 724 A 4 4 0 0 1 167 720 L 272.984375 720" p="ac1321bdd87a" stroke="rgb(51, 156, 168)" fill="none" stroke-linecap="square" stroke-width="2"></path><path id="line_cd69d4f0b424" d="M 272.984375 720 L 291 720 L 291 232 A 4 4 0 0 1 295 228 L 353.265625 228" p="9bd5320ffad9" stroke="rgb(51, 156, 168)" fill="none" stroke-linecap="square" stroke-width="2"></path><path id="line_8c0c045380ba" d="M 353.265625 228 L 372 228 L 372 236 L 1307.265625 236" p="cd69d4f0b424" stroke="rgb(51, 156, 168)" fill="none" stroke-linecap="square" stroke-width="2"></path><path id="line_b8d2f5303784" d="M 272.984375 720 L 291 720 L 291 310 A 4 4 0 0 1 295 306 L 392.265625 306" p="9bd5320ffad9" stroke="rgb(51, 156, 168)" fill="none" stroke-linecap="square" stroke-width="2"></path><path id="line_20c8e849d11a" d="M 392.265625 306 L 411 306 L 411 276 A 4 4 0 0 1 415 272 L 811.265625 272" p="b8d2f5303784" stroke="rgb(51, 156, 168)" fill="none" stroke-linecap="square" stroke-width="2"></path><path id="line_b709753b3a8c" d="M 392.265625 306 L 411 306 L 411 307 L 769.265625 307" p="b8d2f5303784" stroke="rgb(51, 156, 168)" fill="none" stroke-linecap="square" stroke-width="2"></path><path id="line_014b4d599cc3" d="M 769.265625 307 L 788 307 L 788 307 L 1378.203125 307" p="b709753b3a8c" stroke="rgb(51, 156, 168)" fill="none" stroke-linecap="square" stroke-width="2"></path><path id="line_f942ce7e7dfc" d="M 392.265625 306 L 411 306 L 411 339 A 4 4 0 0 0 415 343 L 874.265625 343" p="b8d2f5303784" stroke="rgb(51, 156, 168)" fill="none" stroke-linecap="square" stroke-width="2"></path><path id="line_776c8b7ee68d" d="M 272.984375 720 L 291 720 L 291 673 A 4 4 0 0 1 295 669 L 418.265625 669" p="9bd5320ffad9" stroke="rgb(51, 156, 168)" fill="none" stroke-linecap="square" stroke-width="2"></path><path id="line_fd7401a1ed0e" d="M 418.265625 669 L 437 669 L 437 605 A 4 4 0 0 1 441 601 L 834.265625 601" p="776c8b7ee68d" stroke="rgb(51, 156, 168)" fill="none" stroke-linecap="square" stroke-width="2"></path><path id="line_2947b2b4113b" d="M 418.265625 669 L 437 669 L 437 956 A 4 4 0 0 0 441 960 L 893.265625 960" p="776c8b7ee68d" stroke="rgb(51, 156, 168)" fill="none" stroke-linecap="square" stroke-width="2"></path><path id="line_4e19af6405f0" d="M 272.984375 720 L 291 720 L 291 1052 A 4 4 0 0 0 295 1056 L 508.265625 1056" p="9bd5320ffad9" stroke="rgb(51, 156, 168)" fill="none" stroke-linecap="square" stroke-width="2"></path><path id="line_3de331285e62" d="M 508.265625 1056 L 527 1056 L 527 1000 A 4 4 0 0 1 531 996 L 1042.875 996" p="4e19af6405f0" stroke="rgb(51, 156, 168)" fill="none" stroke-linecap="square" stroke-width="2"></path><path id="line_d13523a39964" d="M 508.265625 1056 L 527 1056 L 527 1036 A 4 4 0 0 1 531 1032 L 1417.875 1032" p="4e19af6405f0" stroke="rgb(51, 156, 168)" fill="none" stroke-linecap="square" stroke-width="2"></path><path id="line_c8d1481d365f" d="M 508.265625 1056 L 527 1056 L 527 1067 L 1347.875 1067" p="4e19af6405f0" stroke="rgb(51, 156, 168)" fill="none" stroke-linecap="square" stroke-width="2"></path><path id="line_95c30408746a" d="M 508.265625 1056 L 527 1056 L 527 1115 A 4 4 0 0 0 531 1119 L 1461.875 1119" p="4e19af6405f0" stroke="rgb(51, 156, 168)" fill="none" stroke-linecap="square" stroke-width="2"></path><path id="line_02a81a23ae9e" d="M 272.984375 720 L 291 720 L 291 1185 A 4 4 0 0 0 295 1189 L 418.265625 1189" p="9bd5320ffad9" stroke="rgb(51, 156, 168)" fill="none" stroke-linecap="square" stroke-width="2"></path><path id="line_2f7d939a2505" d="M 418.265625 1189 L 437 1189 L 437 1167 A 4 4 0 0 1 441 1163 L 578.265625 1163" p="02a81a23ae9e" stroke="rgb(51, 156, 168)" fill="none" stroke-linecap="square" stroke-width="2"></path><path id="line_73088ec5722c" d="M 578.265625 1163 L 597 1163 L 597 1171 L 1277.875 1171" p="2f7d939a2505" stroke="rgb(51, 156, 168)" fill="none" stroke-linecap="square" stroke-width="2"></path><path id="line_abe118782496" d="M 418.265625 1189 L 437 1189 L 437 1211 A 4 4 0 0 0 441 1215 L 604.265625 1215" p="02a81a23ae9e" stroke="rgb(51, 156, 168)" fill="none" stroke-linecap="square" stroke-width="2"></path><path id="line_585d31792a9a" d="M 604.265625 1215 L 623 1215 L 623 1223 L 1557.875 1223" p="abe118782496" stroke="rgb(51, 156, 168)" fill="none" stroke-linecap="square" stroke-width="2"></path><path id="line_141acfc6e688" d="M 1557.875 1223 L 1576 1223 L 1576 1215 L 1779.875 1215" p="585d31792a9a" stroke="rgb(51, 156, 168)" fill="none" stroke-linecap="square" stroke-width="2"></path><path id="line_0e340348cf1d" d="M 145 942 L 163 942 L 163 1567 A 4 4 0 0 0 167 1571 L 226.984375 1571" p="ac1321bdd87a" stroke="rgb(51, 156, 168)" fill="none" stroke-linecap="square" stroke-width="2"></path><path id="line_51945cf1427f" d="M 226.984375 1571 L 245 1571 L 245 1271 A 4 4 0 0 1 249 1267 L 612 1267" p="0e340348cf1d" stroke="rgb(51, 156, 168)" fill="none" stroke-linecap="square" stroke-width="2"></path><path id="line_cfd1eb52982b" d="M 612 1267 L 630 1267 L 630 1275 L 1566.296875 1275" p="51945cf1427f" stroke="rgb(51, 156, 168)" fill="none" stroke-linecap="square" stroke-width="2"></path><path id="line_43a03d42f23c" d="M 226.984375 1571 L 245 1571 L 245 1331 A 4 4 0 0 1 249 1327 L 333 1327" p="0e340348cf1d" stroke="rgb(51, 156, 168)" fill="none" stroke-linecap="square" stroke-width="2"></path><path id="line_ac96df121ae3" d="M 333 1327 L 351 1327 L 351 1311 L 552 1311" p="43a03d42f23c" stroke="rgb(51, 156, 168)" fill="none" stroke-linecap="square" stroke-width="2"></path><path id="line_3727242fcf16" d="M 552 1311 L 570 1311 L 570 1311 L 787.765625 1311" p="ac96df121ae3" stroke="rgb(51, 156, 168)" fill="none" stroke-linecap="square" stroke-width="2"></path><path id="line_20652ccee7db" d="M 333 1327 L 351 1327 L 351 1346 L 529 1346" p="43a03d42f23c" stroke="rgb(51, 156, 168)" fill="none" stroke-linecap="square" stroke-width="2"></path><path id="line_88a14954475f" d="M 529 1346 L 547 1346 L 547 1346 L 674.265625 1346" p="20652ccee7db" stroke="rgb(51, 156, 168)" fill="none" stroke-linecap="square" stroke-width="2"></path><path id="line_02c45029802e" d="M 226.984375 1571 L 245 1571 L 245 1878 A 4 4 0 0 0 249 1882 L 1181 1882" p="0e340348cf1d" stroke="rgb(51, 156, 168)" fill="none" stroke-linecap="square" stroke-width="2"></path></g><g transform="translate(0.5,0)"></g><g class="svg-summary-con" transform="translate(0.5,0.5)"></g></g><g transform="translate(30, 4459.5)" id="sdjakdjak9"><g id="subline_root" transform="translate(0.5,-0.5)"></g><g transform="translate(0.5,0)"></g><g class="svg-summary-con" transform="translate(0.5,0.5)"></g></g><g id="root"><rect x="30" y="4459.5" rx="5px" ry="5px" width="207" height="87" style="fill: #fff; stroke:#3aa9ce;stroke-width:6px;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="30px" font-weight="normal" fill="rgb(51, 51, 51)"><tspan x="48" y="4513.40625"><tspan>MapReduce</tspan></tspan></text></g></g></svg>